// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// INTERPLIN
arma::vec INTERPLIN(arma::vec& yData, arma::vec& zData, arma::vec yPred);
RcppExport SEXP _perdaprodvar_INTERPLIN(SEXP yDataSEXP, SEXP zDataSEXP, SEXP yPredSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec& >::type yData(yDataSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type zData(zDataSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type yPred(yPredSEXP);
    rcpp_result_gen = Rcpp::wrap(INTERPLIN(yData, zData, yPred));
    return rcpp_result_gen;
END_RCPP
}
// INTERPBILIN
arma::vec INTERPBILIN(arma::vec& xData, arma::vec& yData, arma::mat& zData, arma::vec& xPred, arma::vec& yPred);
RcppExport SEXP _perdaprodvar_INTERPBILIN(SEXP xDataSEXP, SEXP yDataSEXP, SEXP zDataSEXP, SEXP xPredSEXP, SEXP yPredSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec& >::type xData(xDataSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type yData(yDataSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type zData(zDataSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type xPred(xPredSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type yPred(yPredSEXP);
    rcpp_result_gen = Rcpp::wrap(INTERPBILIN(xData, yData, zData, xPred, yPred));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_perdaprodvar_INTERPLIN", (DL_FUNC) &_perdaprodvar_INTERPLIN, 3},
    {"_perdaprodvar_INTERPBILIN", (DL_FUNC) &_perdaprodvar_INTERPBILIN, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_perdaprodvar(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
